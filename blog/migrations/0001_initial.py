# Generated by Django 5.0.2 on 2025-10-09 11:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Kategori Adı')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('icon', models.CharField(default='fa-folder', help_text='Örnek: fa-star, fa-moon, fa-sun', max_length=50, verbose_name='İkon (Font Awesome)')),
                ('color', models.CharField(default='#6B1B3D', help_text='Hex renk kodu (örn: #6B1B3D)', max_length=7, verbose_name='Renk Kodu')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sıralama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma')),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategoriler',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Etiket Adı')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Etiket',
                'verbose_name_plural': 'Etiketler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='URL')),
                ('excerpt', models.TextField(help_text='Kısa özet (AI tarafından üretilebilir)', max_length=300, verbose_name='Özet')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/images/%Y/%m/', verbose_name='Öne Çıkan Görsel')),
                ('featured_image_alt', models.CharField(blank=True, max_length=200, verbose_name='Görsel Alt Metni')),
                ('meta_title', models.CharField(blank=True, help_text='SEO için sayfa başlığı', max_length=60, verbose_name='Meta Başlık')),
                ('meta_description', models.CharField(blank=True, help_text='Arama motorları için açıklama', max_length=160, verbose_name='Meta Açıklama')),
                ('meta_keywords', models.CharField(blank=True, help_text='Virgülle ayrılmış', max_length=200, verbose_name='Anahtar Kelimeler')),
                ('ai_generated', models.CharField(choices=[('none', 'Manuel'), ('gemini', 'Gemini AI'), ('openai', 'OpenAI'), ('hybrid', 'Hibrit (AI + Manuel)')], default='none', max_length=20, verbose_name='AI Üretimi')),
                ('ai_prompt', models.TextField(blank=True, help_text='İçerik üretimi için kullanılan prompt', verbose_name='AI Prompt')),
                ('ai_model', models.CharField(blank=True, help_text='Kullanılan AI modeli', max_length=50, verbose_name='AI Model')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('published', 'Yayınlandı'), ('scheduled', 'Zamanlandı'), ('archived', 'Arşivlendi')], default='draft', max_length=20, verbose_name='Durum')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Yayın Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Görüntülenme')),
                ('like_count', models.PositiveIntegerField(default=0, verbose_name='Beğeni')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Yorumlara İzin Ver')),
                ('is_featured', models.BooleanField(default=False, help_text='Ana sayfada görünsün mü?', verbose_name='Öne Çıkan')),
                ('reading_time', models.PositiveIntegerField(default=5, help_text='Ortalama okuma süresi', verbose_name='Okuma Süresi (dk)')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Yazar')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category', verbose_name='Kategori')),
                ('tags', models.ManyToManyField(blank=True, related_name='posts', to='blog.tag', verbose_name='Etiketler')),
            ],
            options={
                'verbose_name': 'Blog Yazısı',
                'verbose_name_plural': 'Blog Yazıları',
                'ordering': ['-publish_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='İsim')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-posta')),
                ('content', models.TextField(verbose_name='Yorum')),
                ('status', models.CharField(choices=[('pending', 'Onay Bekliyor'), ('approved', 'Onaylandı'), ('spam', 'Spam'), ('deleted', 'Silindi')], default='pending', max_length=20, verbose_name='Durum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='Üst Yorum')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost', verbose_name='Yazı')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Yorum',
                'verbose_name_plural': 'Yorumlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['-publish_date', 'status'], name='blog_blogpo_publish_0f20d8_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='blog_blogpo_slug_361555_idx'),
        ),
    ]
